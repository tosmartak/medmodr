% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_mediation_paths.R
\name{run_mediation_paths}
\alias{run_mediation_paths}
\title{Iterate mediation analyses across variable sets}
\usage{
run_mediation_paths(
  data,
  treatments,
  mediators,
  outcomes,
  controls = NULL,
  sims = 1000,
  boot = TRUE,
  seed = 123
)
}
\arguments{
\item{data}{A data frame containing all variables.}

\item{treatments}{Character vector of treatment variable names.}

\item{mediators}{Character vector of mediator variable names.}

\item{outcomes}{Character vector of outcome variable names.}

\item{controls}{Optional character vector of controls; duplicates of current
treatment/mediator are removed per model.}

\item{sims}{Integer number of simulation draws for \code{mediate()} (default 1000).}

\item{boot}{Logical; if \code{TRUE}, nonparametric bootstrap; if \code{FALSE},
quasi-Bayesian Monte Carlo (default \code{TRUE}).}

\item{seed}{Integer RNG seed for reproducibility (default 123).}
}
\value{
A tibble with columns:
\itemize{
\item \code{Treatment}, \code{Mediator}, \code{Outcome}
\item \code{ACME}, \code{ACME_CI_Lower}, \code{ACME_CI_Upper}, \code{ACME_p}
\item \code{ADE}, \code{ADE_CI_Lower}, \code{ADE_CI_Upper}, \code{ADE_p}
\item \code{Total_Effect}, \code{Total_Effect_CI_Lower}, \code{Total_Effect_CI_Upper}, \code{Total_Effect_p}
\item \code{Prop_Mediated}, \code{PropMediated_CI_Lower}, \code{PropMediated_CI_Upper}, \code{PropMediated_p}
\item \code{Has_Mediation} (logical; significant ACME with CI not crossing 0)
}
}
\description{
Fits two linear models per triple \code{(treatment, mediator, outcome)}:
\code{mediator ~ treatment + controls} and \code{outcome ~ mediator + treatment + controls},
then estimates mediation effects via \code{mediation::mediate()}.
Returns a tidy summary row per triple.
}
\details{
Models are fit with \code{stats::lm()} and \code{na.action = stats::na.exclude}.
Formulas are constructed safely without \code{eval(parse())}.
The \pkg{mediation} package is required; if unavailable, an informative error is thrown.
}
\examples{
\donttest{
if (requireNamespace("mediation", quietly = TRUE)) {
  set.seed(1)
  n <- 120
  df <- data.frame(
    T = rnorm(n),
    M = rnorm(n),
    Y = rnorm(n),
    C = rnorm(n)
  )
  # Inject simple mediation signal
  df$M <- 0.7 * df$T + df$M
  df$Y <- 0.6 * df$M + 0.3 * df$T + df$Y + 0.2 * df$C

  out <- run_mediation_paths(
    data = df,
    treatments = "T",
    mediators = "M",
    outcomes = "Y",
    controls = "C",
    sims = 200, boot = FALSE
  )
  head(out)
}
}

}
