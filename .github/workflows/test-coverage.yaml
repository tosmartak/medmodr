# .github/workflows/test-coverage.yaml
# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Runs test coverage via covr and uploads directly to Codecov (tokenless for public repos)

name: test-coverage

on:
  push:
    branches: [main, master]
    paths:
      - 'R/**'
      - 'tests/**'
      - 'vignettes/**'
      - 'inst/**'
      - 'DESCRIPTION'
      - 'NAMESPACE'
      - '.Rbuildignore'
      - '.github/workflows/test-coverage.yaml'
  pull_request:
    branches: [main, master]
    paths:
      - 'R/**'
      - 'tests/**'
      - 'vignettes/**'
      - 'inst/**'
      - 'DESCRIPTION'
      - 'NAMESPACE'
      - '.Rbuildignore'
      - '.github/workflows/test-coverage.yaml'
  workflow_dispatch:

concurrency:
  group: test-coverage-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true  # fast binaries on Linux

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::covr
          needs: coverage
          cache-version: 1        # bump to invalidate cache when needed

      - name: Run tests and upload coverage to Codecov
        run: covr::codecov()
        shell: Rscript {0}

      - name: Show coverage summary
        run: |
          Rscript -e 'cov <- covr::package_coverage();
                      cat("\nOverall Coverage:\n"); print(cov);
                      df <- as.data.frame(cov);
                      files <- split(df, df$filename)
                      summ <- do.call(rbind, lapply(names(files), function(f) {
                        d <- files[[f]]
                        total <- nrow(d)
                        covered <- sum(d$value > 0, na.rm = TRUE)
                        data.frame(file = f,
                                   coverage = sprintf("%.2f%%", 100 * covered / total),
                                   covered = covered,
                                   total = total,
                                   stringsAsFactors = FALSE)
                      }))
                      ord <- order(as.numeric(sub("%","",summ$coverage)), decreasing = TRUE)
                      summ <- summ[ord, ]
                      cat("\nCoverage by File:\n"); print(summ, row.names = FALSE)'
        shell: bash

      - name: Show testthat output
        if: always()
        run: |
          ## --------------------------------------------------------------------
          find '${{ runner.temp }}/package' -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash
